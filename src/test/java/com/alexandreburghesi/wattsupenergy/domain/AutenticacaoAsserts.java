package com.alexandreburghesi.wattsupenergy.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutenticacaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutenticacaoAllPropertiesEquals(Autenticacao expected, Autenticacao actual) {
        assertAutenticacaoAutoGeneratedPropertiesEquals(expected, actual);
        assertAutenticacaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutenticacaoAllUpdatablePropertiesEquals(Autenticacao expected, Autenticacao actual) {
        assertAutenticacaoUpdatableFieldsEquals(expected, actual);
        assertAutenticacaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutenticacaoAutoGeneratedPropertiesEquals(Autenticacao expected, Autenticacao actual) {
        assertThat(actual)
            .as("Verify Autenticacao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutenticacaoUpdatableFieldsEquals(Autenticacao expected, Autenticacao actual) {
        assertThat(actual)
            .as("Verify Autenticacao relevant properties")
            .satisfies(a -> assertThat(a.getUsuario()).as("check usuario").isEqualTo(expected.getUsuario()))
            .satisfies(a -> assertThat(a.getSenha()).as("check senha").isEqualTo(expected.getSenha()))
            .satisfies(a -> assertThat(a.getAccessToken()).as("check accessToken").isEqualTo(expected.getAccessToken()))
            .satisfies(a -> assertThat(a.getTokenType()).as("check tokenType").isEqualTo(expected.getTokenType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutenticacaoUpdatableRelationshipsEquals(Autenticacao expected, Autenticacao actual) {
        // empty method
    }
}
