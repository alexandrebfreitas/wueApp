package com.alexandreburghesi.wattsupenergy.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ApiindicadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApiindicadorAllPropertiesEquals(Apiindicador expected, Apiindicador actual) {
        assertApiindicadorAutoGeneratedPropertiesEquals(expected, actual);
        assertApiindicadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApiindicadorAllUpdatablePropertiesEquals(Apiindicador expected, Apiindicador actual) {
        assertApiindicadorUpdatableFieldsEquals(expected, actual);
        assertApiindicadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApiindicadorAutoGeneratedPropertiesEquals(Apiindicador expected, Apiindicador actual) {
        assertThat(actual)
            .as("Verify Apiindicador auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApiindicadorUpdatableFieldsEquals(Apiindicador expected, Apiindicador actual) {
        assertThat(actual)
            .as("Verify Apiindicador relevant properties")
            .satisfies(a -> assertThat(a.getFiltro()).as("check filtro").isEqualTo(expected.getFiltro()))
            .satisfies(a -> assertThat(a.getDadosindicador()).as("check dadosindicador").isEqualTo(expected.getDadosindicador()))
            .satisfies(a -> assertThat(a.getChave()).as("check chave").isEqualTo(expected.getChave()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApiindicadorUpdatableRelationshipsEquals(Apiindicador expected, Apiindicador actual) {
        // empty method
    }
}
