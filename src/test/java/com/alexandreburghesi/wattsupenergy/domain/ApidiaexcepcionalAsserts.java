package com.alexandreburghesi.wattsupenergy.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ApidiaexcepcionalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApidiaexcepcionalAllPropertiesEquals(Apidiaexcepcional expected, Apidiaexcepcional actual) {
        assertApidiaexcepcionalAutoGeneratedPropertiesEquals(expected, actual);
        assertApidiaexcepcionalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApidiaexcepcionalAllUpdatablePropertiesEquals(Apidiaexcepcional expected, Apidiaexcepcional actual) {
        assertApidiaexcepcionalUpdatableFieldsEquals(expected, actual);
        assertApidiaexcepcionalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApidiaexcepcionalAutoGeneratedPropertiesEquals(Apidiaexcepcional expected, Apidiaexcepcional actual) {
        assertThat(actual)
            .as("Verify Apidiaexcepcional auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApidiaexcepcionalUpdatableFieldsEquals(Apidiaexcepcional expected, Apidiaexcepcional actual) {
        assertThat(actual)
            .as("Verify Apidiaexcepcional relevant properties")
            .satisfies(a ->
                assertThat(a.getDadosdiaexcepcional()).as("check dadosdiaexcepcional").isEqualTo(expected.getDadosdiaexcepcional())
            )
            .satisfies(a -> assertThat(a.getChave()).as("check chave").isEqualTo(expected.getChave()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertApidiaexcepcionalUpdatableRelationshipsEquals(Apidiaexcepcional expected, Apidiaexcepcional actual) {
        // empty method
    }
}
